{"version":3,"sources":["./src/app/global/module/declarations.ts","./src/app/survey/question/confirm-buttons/confirm-buttons.component.css","./src/app/survey/instances/instances-dummy/instances-dummy.component.css","./src/app/survey/question/question-choice-slider/question-choice-slider.component.css","./src/app/survey/question/question.service.ts","./src/app/survey/question/question.component.css","./src/app/survey/question-container/question-container.component.ts","./src/app/survey/question/question-choice/question-choice.component.css","./src/app/home/home.component.ts","./src/app/app.component.css","./src/environments/environment.ts","./src/app/auth/auth.interceptor.ts","./src/app/survey/question/question-dummy/question-dummy.component.ts","./src/app/survey/question/question-array/question-array.component.html","./src/app/survey/survey.service.ts","./src/app/home/home.component.html","./src/app/survey/question/question-input/question-input.component.html","./src/app/survey/instances/instance/instance.component.ts","./src/app/survey/question/question.component.ts","./src/app/survey/instances/instances-dummy/instances-dummy.component.html","./src/app/utility/utility.service.ts","./src/app/survey/question/question-input/question-input.component.ts","./src/app/survey/question/question-choice-slider/question-choice-slider.component.html","./src/app/auth/auth.guard.ts","./src/app/survey/question/question-choice/question-choice.component.html","./src/app/survey/question-container/question-container.component.html","./src/app/survey/question/question-input/question-input.model.ts","./src/app/app.routes.ts","./src/app/home/home.component.css","./src/app/survey/question/question.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/survey/question/question-choice-slider/question-choice-slider.component.ts","./src/app/survey/instances/instance/instance.component.html","./src/app/survey/instance.model.ts","./src/app/survey/question/confirm-buttons/confirm-buttons.component.ts","./src/app/survey/instances/instances.component.ts","./src/app/app.module.ts","./src/app/global/module/providers.ts","./src/app/survey/question/confirm-buttons/confirm-buttons.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/token-storage.service.ts","./src/app/survey/question/question-array/question-array.component.ts","./src/app/material/material.module.ts","./src/app/global/global.interceptor.ts","./src/app/survey/instances/instances-dummy/instances-dummy.component.ts","./src/app/survey/question/question-dummy/question-dummy.component.css","./src/app/survey/question/question-choice/question-choice.component.ts","./src/app/survey/question/question-array/question-array.model.ts","./src/app/utility/icon.service.ts","./src/app/survey/instances/today-instance/today-instance.component.html","./src/app/auth/auth.service.ts","./src/app/survey/question/question-dummy/question-dummy.component.html","./src/app/survey/instances/instance/instance.component.css","./src/app/survey/instances/instances.component.html","./src/app/survey/instances/today-instance/today-instance.component.css","./src/app/survey/question/question-choice/question-choice.model.ts","./src/app/auth/login/login.guard.ts","./src/app/survey/instances/today-instance/today-instance.component.ts","./src/app/app-routing.module.ts","./src/app/auth/login/login.component.css","./src/app/survey/question/question-input/question-input.component.css","./src/app/survey/question/question-array/question-array.component.css","./src/app/survey/instances/instances.component.css","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {AppComponent} from '@src/app/app.component';\nimport {HomeComponent} from '@src/app/home/home.component';\nimport {QuestionComponent} from '@src/app/survey/question/question.component';\nimport {QuestionChoiceComponent} from '@src/app/survey/question/question-choice/question-choice.component';\nimport {QuestionArrayComponent} from '@src/app/survey/question/question-array/question-array.component';\nimport {QuestionInputComponent} from '@src/app/survey/question/question-input/question-input.component';\nimport {ConfirmButtonsComponent} from '@src/app/survey/question/confirm-buttons/confirm-buttons.component';\nimport {QuestionDummyComponent} from '@src/app/survey/question/question-dummy/question-dummy.component';\nimport {InstancesComponent} from '@src/app/survey/instances/instances.component';\nimport {InstancesDummyComponent} from '@src/app/survey/instances/instances-dummy/instances-dummy.component';\nimport {InstanceComponent} from '@src/app/survey/instances/instance/instance.component';\nimport {LoginComponent} from '@src/app/auth/login/login.component';\nimport {QuestionContainerComponent} from '@src/app/survey/question-container/question-container.component';\nimport {QuestionChoiceSliderComponent} from '@src/app/survey/question/question-choice-slider/question-choice-slider.component';\nimport {TodayInstanceComponent} from '@src/app/survey/instances/today-instance/today-instance.component';\n\nexport const declarations = [\n  AppComponent,\n  HomeComponent,\n  LoginComponent,\n  InstancesComponent,\n  InstancesDummyComponent,\n  InstanceComponent,\n  TodayInstanceComponent,\n  QuestionContainerComponent,\n  QuestionComponent,\n  QuestionDummyComponent,\n  QuestionChoiceComponent,\n  QuestionChoiceSliderComponent,\n  QuestionArrayComponent,\n  QuestionInputComponent,\n  ConfirmButtonsComponent,\n];\n","export default \".root {\\n  display: flex;\\n  justify-content: space-around;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpcm0tYnV0dG9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJjb25maXJtLWJ1dHRvbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb290IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG4iXX0= */\";","export default \".container {\\n  display: grid;\\n  grid-template-columns: repeat(7, 1fr);\\n  grid-column-gap: 30px;\\n  padding: 50px 80px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc3RhbmNlcy1kdW1teS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHFDQUFxQztFQUNyQyxxQkFBcUI7RUFDckIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6Imluc3RhbmNlcy1kdW1teS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDcsIDFmcik7XG4gIGdyaWQtY29sdW1uLWdhcDogMzBweDtcbiAgcGFkZGluZzogNTBweCA4MHB4O1xufVxuIl19 */\";","export default \"mat-slider {\\n  width: 100%;\\n  margin-top: 50px;\\n}\\n\\n.value-label {\\n  margin-top: 10px;\\n  margin-bottom: 30px;\\n  font-size: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9uLWNob2ljZS1zbGlkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakIiLCJmaWxlIjoicXVlc3Rpb24tY2hvaWNlLXNsaWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LXNsaWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tdG9wOiA1MHB4O1xufVxuXG4udmFsdWUtbGFiZWwge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICBmb250LXNpemU6IDIwcHg7XG59XG4iXX0= */\";","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n  hasNextQuestion: boolean;\n  hasPrevQuestion: boolean;\n\n  constructor() {}\n}\n","export default \".root {\\n  background-color: #f8f8f8;\\n  height: 100vh;\\n  width: 100vw;\\n\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.question-container {\\n  min-width: 300px;\\n  padding: 30px 40px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7RUFDekIsYUFBYTtFQUNiLFlBQVk7O0VBRVosYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InF1ZXN0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm9vdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDB2dztcblxuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG4gIG1pbi13aWR0aDogMzAwcHg7XG4gIHBhZGRpbmc6IDMwcHggNDBweDtcbn1cblxuIl19 */\";","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {SurveyService} from '@src/app/survey/survey.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {map, switchMap} from 'rxjs/operators';\nimport {Observable, of, Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-question-container',\n  templateUrl: './question-container.component.html',\n})\nexport class QuestionContainerComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n\n  constructor(\n    private surveyService: SurveyService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.route.paramMap.pipe(\n      // instance id\n      map(params => params.get('instanceId')),\n      // survey\n      switchMap((instanceId: string) => this.surveyService.getSurvey(instanceId)),\n      // first question id\n      map(survey => survey?.[0]?._id ?? null),\n      // navigate to first id\n      switchMap((firstQuestionId: string | null) => {\n        if (!firstQuestionId) {\n          return of(null);\n        }\n\n        return this.router.navigate(\n          ['question', firstQuestionId],\n          {relativeTo: this.route}\n        );\n      })\n    ).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","export default \"ul {\\n  list-style-type: none;\\n  -webkit-padding-start: 0;\\n          padding-inline-start: 0;\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n}\\n\\nli {\\n  margin-top: 15px;\\n  display: flex;\\n}\\n\\n.checkbox-label {\\n  margin-left: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9uLWNob2ljZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLHdCQUF1QjtVQUF2Qix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoicXVlc3Rpb24tY2hvaWNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbmxpIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmNoZWNrYm94LWxhYmVsIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '@src/app/auth/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  title = 'thesis-client';\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  login1() {\n    this.login('002');\n  }\n\n  login2() {\n    this.login('003');\n  }\n\n  login(userId: string) {\n    this.authService.login(userId, '12345678')\n      .subscribe(\n        () => {},\n        error => console.error(error)\n      );\n\n    // this.authService.tryToken();\n  }\n\n  readToken() {\n    const token = this.authService.readToken();\n    console.log(token);\n  }\n\n  get() {\n    this.authService.get();\n  }\n\n  goToQuestion() {\n    this.router.navigate(['instance', 2, 'question', 1])\n      .catch();\n  }\n\n  goToInstances() {\n    this.router.navigate(['instance'])\n      .catch();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {TokenStorageService} from '@src/app/auth/token-storage.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private tokenStorageService: TokenStorageService) {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // getting access token\n        const accessToken = this.tokenStorageService.readToken();\n\n        // adding authorization header\n        const requestWithAccessToken = req.clone({\n            headers: req.headers.set('Authorization', `Bearer ${accessToken}`)\n        });\n\n        return next.handle(requestWithAccessToken);\n    }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {QuestionChoiceModel} from '@src/app/survey/question/question-choice/question-choice.model';\nimport {QuestionArrayModel} from '@src/app/survey/question/question-array/question-array.model';\nimport {QuestionInputModel} from '@src/app/survey/question/question-input/question-input.model';\nimport {QuestionService} from '@src/app/survey/question/question.service';\n\n@Component({\n  selector: 'app-question-dummy',\n  templateUrl: './question-dummy.component.html',\n  styleUrls: ['./question-dummy.component.css']\n}) export class QuestionDummyComponent {\n  @Output() nextQuestion = new EventEmitter();\n  @Output() prevQuestion = new EventEmitter();\n\n  @Input() set hasNextQuestion(value: boolean) {\n    this.questionService.hasNextQuestion = value;\n  }\n\n  get hasNextQuestion() {\n    return this.questionService.hasNextQuestion;\n  }\n\n  @Input() set hasPrevQuestion(value: boolean) {\n    this.questionService.hasPrevQuestion = value;\n  }\n\n  get hasPrevQuestion() {\n    return this.questionService.hasPrevQuestion;\n  }\n\n  private _answer;\n  @Input() set answer(value) {\n    this._answer = value;\n    this.changeStartValue();\n  }\n\n  get answer() {\n    return this._answer;\n  }\n\n  @Input() set question (value: any) {\n    if (!value) {\n      return;\n    }\n\n    // extract data from question\n\n    this.questionType = value.type;\n    this.questionLabel = value.data.label;\n\n    this.isTypeChoice = this.questionType === 'choice';\n    this.isTypeArray = this.questionType === 'array';\n    this.isTypeInput = this.questionType === 'input';\n\n    this.questionData = this.isTypeChoice ? new QuestionChoiceModel(value.data)\n        : this.isTypeArray ? new QuestionArrayModel(value.data)\n        : this.isTypeInput ? new QuestionInputModel(value.data) : {};\n\n\n    this.changeStartValue();\n  }\n\n  questionType: string;\n  questionLabel: string;\n  questionData: QuestionChoiceModel | QuestionArrayModel | QuestionInputModel | any = {};\n  isTypeChoice = false;\n  isTypeArray = false;\n  isTypeInput = false;\n  startValue;\n\n  constructor(\n    private questionService: QuestionService\n  ) {}\n\n  onNextQuestion(event) {\n    this.nextQuestion.emit(event);\n  }\n\n  onPrevQuestion() {\n    this.prevQuestion.emit();\n  }\n\n  changeStartValue() {\n    if (!this.answer || this.answer.questionType !== this.questionType) {\n      this.startValue = null;\n      return;\n    }\n\n    this.startValue = this.answer.data;\n  }\n}\n","export default \"<div>\\n  Question array\\n  <table>\\n    <tr>\\n      <th></th>\\n      <th *ngFor=\\\"let option of options\\\">\\n        {{option.label}}\\n      </th>\\n    </tr>\\n    <tr *ngFor=\\\"let subQuestion of checkBoxesControl.controls; let rowIndex=index\\\">\\n      <td>\\n        {{getSubQuestion(rowIndex)}}\\n      </td>\\n      <td *ngFor=\\\"let control of getControlsFromSubQuestion(subQuestion); let i=index\\\">\\n        <div class=\\\"checkbox-container\\\">\\n          <mat-checkbox\\n            class=\\\"checkbox\\\"\\n            [checked]=\\\"control.value\\\"\\n            (change)=\\\"toggleCheckbox($event.checked, control, subQuestion)\\\"\\n          ></mat-checkbox>\\n        </div>\\n      </td>\\n    </tr>\\n  </table>\\n  <app-confirm-buttons\\n    (next)=\\\"onNextQuestion()\\\"\\n    (prev)=\\\"onPrevQuestion()\\\"\\n  ></app-confirm-buttons>\\n</div>\\n\";","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map, tap} from 'rxjs/operators';\nimport {QuestionChoiceModel} from '@src/app/survey/question/question-choice/question-choice.model';\nimport {QuestionArrayModel} from '@src/app/survey/question/question-array/question-array.model';\nimport {QuestionInputModel} from '@src/app/survey/question/question-input/question-input.model';\nimport {Observable, of} from 'rxjs';\nimport {InstanceModel} from '@src/app/survey/instance.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveyService {\n  prefix = 'API/survey';\n  instancePrefix = 'API/instance';\n  instanceId = null;\n  survey = null;\n\n  constructor(private http: HttpClient) {}\n\n  getQuestionsFromInstanceId(instanceId= '2') {\n    return this.http.get(\n      `API/instance/${instanceId}/question`\n    ).pipe(\n      map((questions: any[]) => questions.map(q => this.formatQuestion(q))),\n    );\n\n  }\n\n  answerQuestion(instanceId, questionId, value) {\n    return this.http.post(`API/instance/${instanceId}/question/${questionId}/answer`, {value});\n  }\n\n  getAnswer(instanceId, questionId) {\n    return this.http.get(`API/instance/${instanceId}/question/${questionId}/answer/`);\n  }\n\n  private refreshSurvey(instanceId) {\n    return this.http.get(`${this.instancePrefix}/${instanceId}/question`).pipe(\n      tap(survey => {\n        this.instanceId = instanceId;\n        this.survey = survey;\n      }),\n    );\n  }\n\n  getSurvey(instanceId: string): Observable<any> {\n    if (instanceId !== this.instanceId || this.survey === null) {\n      this.instanceId = null;\n      return this.refreshSurvey(instanceId);\n    }\n    return of(this.survey);\n  }\n\n  getQuestion(instanceId, questionId) {\n    return this.getSurvey(instanceId).pipe(\n      map(questions => questions.find(question => question._id === questionId)),\n    );\n  }\n\n  getNextQuestionId(instanceId, questionId): Observable<number | null> {\n    return this.getSurvey(instanceId).pipe(\n      map(questions => {\n        const index = questions.findIndex(question => question._id === questionId);\n        return questions[index + 1]?._id ?? null;\n      })\n    );\n  }\n\n  getPrevQuestionId(instanceId, questionId): Observable<number | null> {\n    return this.getSurvey(instanceId).pipe(\n      map(questions => {\n        const index = questions.findIndex(question => question._id === questionId);\n        return questions[index - 1]?._id ?? null;\n      })\n    );\n  }\n\n  getInstances() {\n    return this.http.get<any>(this.instancePrefix).pipe(\n      map(instances => instances.map(i => new InstanceModel(i)))\n    );\n  }\n\n  getTodayInstance(): Observable<InstanceModel> {\n    return this.http.post<any>(`${this.instancePrefix}/today-instance`, {}).pipe(\n      map(instance => new InstanceModel(instance))\n    );\n  }\n\n  private formatQuestion(question) {\n    const questionData = question.type === 'choice' ? new QuestionChoiceModel(question.data) :\n      question.type === 'array' ? new QuestionArrayModel(question.data) :\n      question.type === 'input' ? new QuestionInputModel(question.data) : null;\n\n    return {\n      _id: question._id,\n      type: question.type,\n      data: questionData,\n    };\n  }\n}\n","export default \"<button (click)=\\\"login1()\\\">\\n  LOGIN 1\\n</button>\\n<br />\\n<button (click)=\\\"login2()\\\">\\n  LOGIN 2\\n</button>\\n<br />\\n<button (click)=\\\"readToken()\\\">\\n  READ TOKEN\\n</button>\\n<br />\\n<button (click)=\\\"goToQuestion()\\\">\\n  GO BACK\\n</button>\\n<br />\\n<button (click)=\\\"goToInstances()\\\">\\n  INSTANCES\\n</button>\\n\\n\\n\";","export default \"<div>\\n  Question input\\n  <form class=\\\"form\\\" [formGroup]=\\\"formGroup\\\">\\n    <mat-form-field>\\n      <input matInput [formControl]=\\\"valueControl\\\" type=\\\"text\\\">\\n    </mat-form-field>\\n  </form>\\n  <app-confirm-buttons\\n    (next)=\\\"onNextQuestion()\\\"\\n    (prev)=\\\"onPrevQuestion()\\\"\\n  ></app-confirm-buttons>\\n</div>\\n\";","import {Component, Input} from '@angular/core';\nimport {InstanceModel} from '@src/app/survey/instance.model';\nimport format from 'date-fns/format';\n\n@Component({\n  selector: 'app-instance',\n  templateUrl: './instance.component.html',\n  styleUrls: ['./instance.component.css']\n})\nexport class InstanceComponent {\n  day = '';\n  month = '';\n  year = '';\n\n  link;\n\n  private _instance;\n  @Input() set instance(value: InstanceModel) {\n    this._instance = value;\n\n    if (value) {\n      const [day, month, year] = format(value.date, 'd MMMM yyyy')\n        .split(' ');\n\n      this.day = day;\n      this.month = month;\n      this.year = year;\n\n      this.link = ['/instance', value._id];\n    }\n  }\n\n  get instance() {\n    return this._instance;\n  }\n\n  constructor() {}\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Observable, of, zip} from 'rxjs';\nimport {SurveyService} from '@src/app/survey/survey.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {map, switchMap, take} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n  answer$: Observable<any>;\n  startValue$: Observable<any>;\n  instanceId$: Observable<string>;\n  questionId$: Observable<string>;\n  question$: Observable<any>;\n  nextQuestionId$;\n  prevQuestionId$;\n  hasNextQuestion$;\n  hasPrevQuestion$;\n\n\n  constructor(\n    private surveyService: SurveyService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.instanceId$ = this.route.paramMap.pipe(\n      map(params => params.get('instanceId')),\n    );\n\n    this.questionId$ = this.route.paramMap.pipe(\n      map(params => params.get('questionId')),\n    );\n\n    const instanceIdAndQuestionId$ = zip(this.instanceId$, this.questionId$);\n\n    this.question$ = instanceIdAndQuestionId$.pipe(\n      switchMap(([instanceId, questionId]) => this.surveyService.getQuestion(instanceId, questionId)),\n    );\n\n    this.answer$ = instanceIdAndQuestionId$.pipe(\n      switchMap(([instanceId, questionId]) => this.surveyService.getAnswer(instanceId, questionId)),\n    );\n\n    this.nextQuestionId$ = instanceIdAndQuestionId$.pipe(\n      switchMap(([instanceId, questionId]) => this.surveyService.getNextQuestionId(instanceId, questionId))\n    );\n\n    this.prevQuestionId$ = instanceIdAndQuestionId$.pipe(\n      switchMap(([instanceId, questionId]) => this.surveyService.getPrevQuestionId(instanceId, questionId))\n    );\n\n    this.hasNextQuestion$ = this.nextQuestionId$.pipe(\n      map(id => id !== null)\n    );\n\n    this.hasPrevQuestion$ = this.prevQuestionId$.pipe(\n      map(id => id !== null)\n    );\n  }\n\n  goBack() {\n    this.router.navigate(['home'])\n      .catch();\n  }\n\n  nextQuestion(value) {\n    zip(this.instanceId$, this.questionId$).pipe(\n      take(1),\n      switchMap(([instanceId, questionId]) => this.surveyService.answerQuestion(instanceId, questionId, value)),\n      switchMap(() => this.navigateToQuestion(this.nextQuestionId$))\n    ).subscribe();\n  }\n\n  prevQuestion() {\n    this.navigateToQuestion(this.prevQuestionId$).subscribe();\n  }\n\n  navigateToQuestion(questionId$: Observable<string>) {\n    return zip(this.instanceId$, questionId$, this.hasNextQuestion$).pipe(\n      take(1),\n      switchMap(([instanceId, questionId, hasNextQuestion]) => {\n        if (instanceId === null) {\n          return of();\n        }\n\n        if (!hasNextQuestion) {\n          return this.router.navigate(['/instance']);\n        }\n\n        if (questionId === null) {\n          return of();\n        }\n        return this.router.navigate(['/instance', instanceId, 'question', questionId]);\n      })\n    );\n  }\n}\n","export default \"<div class=\\\"container\\\">\\n  <app-instance\\n    *ngFor=\\\"let instance of instances\\\"\\n    [instance]=\\\"instance\\\"\\n  ></app-instance>\\n</div>\\n\\n\";","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilityService {\n  constructor() {}\n\n  dismissSoftKeyBoard() {\n\n  }\n\n  initNotifications() {\n\n  }\n\n  scheduleSurveyNotifications() {\n\n  }\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {max} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-question-input',\n  templateUrl: './question-input.component.html',\n  styleUrls: ['./question-input.component.css', '../question.component.css']\n}) export class QuestionInputComponent {\n  @Output() nextQuestion = new EventEmitter();\n  @Output() prevQuestion = new EventEmitter();\n\n  @Input() label: string;\n  @Input() set textConfigValues(value) {\n    const {\n      type,\n      minLength,\n      maxLength,\n    } = value;\n\n    if (this.type !== type || this.minLength !== minLength || this.maxLength !== maxLength) { // changed values\n      this.initFormValue();\n    }\n\n    this.type = type;\n    this.minLength = minLength;\n    this.maxLength = maxLength;\n  }\n\n  get textConfigValues() {\n    return {\n      type: this.type,\n      minLength: this.minLength,\n      maxLength: this.maxLength\n    };\n  }\n\n  private _startValue = '';\n  @Input() set startValue(value: string) {\n    if (!value) {\n      return;\n    }\n\n    this._startValue = value;\n    this.initFormValue(this._startValue);\n  }\n\n  type: string;\n  private minLength: number;\n  private maxLength: number;\n\n  formGroup = this.fb.group({\n    value: this.fb.control([['']])\n  });\n\n  get valueControl() {\n    return this.formGroup.get('value');\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  onNextQuestion () {\n    const formValid = this.validateForm();\n\n    if (!formValid) {\n      return;\n    }\n\n    this.nextQuestion.emit(this.valueControl.value);\n  }\n\n  onPrevQuestion () {\n    this.prevQuestion.emit();\n  }\n\n  validateForm(): boolean {\n    return this.formGroup.valid;\n  }\n\n  initFormValue(startValue= '') {\n    this.formGroup = this.fb.group({\n      value: [startValue, [Validators.required, Validators.minLength(this.minLength), Validators.maxLength(this.maxLength)]]\n    });\n  }\n}\n","export default \"<div>\\n  {{label}}\\n  <form [formGroup]=\\\"fg\\\">\\n    <mat-slider\\n      [min]=\\\"minNumber\\\"\\n      [max]=\\\"maxNumber\\\"\\n      step=\\\"1\\\"\\n      [value]=\\\"sliderControl.value\\\"\\n      (input)=\\\"onValueChange($event.value)\\\"\\n    ></mat-slider>\\n  </form>\\n  <p class=\\\"value-label\\\">\\n    {{sliderControl.value}}: {{selectedOption}}\\n  </p>\\n  <app-confirm-buttons\\n    (next)=\\\"onNextQuestion()\\\"\\n    (prev)=\\\"onPrevQuestion()\\\"\\n  ></app-confirm-buttons>\\n</div>\\n\";","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '@src/app/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n}) export class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isValidToken = this.authService.validToken();\n    if (isValidToken) {\n      return true;\n    }\n\n    return this.router.parseUrl('/login');\n  }\n}\n","export default \"<div>\\n  {{label}}\\n  <ul [formGroup]=\\\"formGroup\\\">\\n    <li *ngFor=\\\"let control of checkBoxesControl.controls; let i=index\\\">\\n      <mat-checkbox\\n        [checked]=\\\"control.value\\\"\\n        (change)=\\\"toggleCheckbox($event.checked, control)\\\"\\n      >\\n      </mat-checkbox>\\n      <div class=\\\"checkbox-label\\\">\\n        {{getOptionLabelFromIndex(i)}}\\n      </div>\\n    </li>\\n  </ul>\\n  <app-confirm-buttons\\n    (next)=\\\"onNextQuestion()\\\"\\n    (prev)=\\\"onPrevQuestion()\\\"\\n  ></app-confirm-buttons>\\n</div>\\n\";","export default \"\";","export class QuestionInputModel {\n  type: string;\n  label: string;\n  minLength: number;\n  maxLength: number;\n\n  constructor(value: {type, label, minLength, maxLength}) {\n    const {type, label, minLength, maxLength} = value;\n    this.type = type;\n    this.label = label;\n    this.minLength = minLength;\n    this.maxLength = maxLength;\n  }\n}\n","import { Routes } from '@angular/router';\n\nimport { HomeComponent } from '@src/app/home/home.component';\nimport {QuestionComponent} from '@src/app/survey/question/question.component';\nimport {InstancesComponent} from '@src/app/survey/instances/instances.component';\nimport {LoginComponent} from '@src/app/auth/login/login.component';\nimport {AuthGuard} from '@src/app/auth/auth.guard';\nimport {QuestionContainerComponent} from '@src/app/survey/question-container/question-container.component';\nimport {TodayInstanceComponent} from '@src/app/survey/instances/today-instance/today-instance.component';\nimport {LoginGuard} from '@src/app/auth/login/login.guard';\n\nexport const routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [LoginGuard]\n  },\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    children: [\n      {\n          path: '',\n          redirectTo: '/instance',\n          pathMatch: 'full',\n      },\n      {\n        path: 'home',\n        component: HomeComponent,\n      },\n      {\n        path: 'instance',\n        component: TodayInstanceComponent,\n        // component: InstancesComponent,\n      },\n      {\n        path: 'instance/:instanceId',\n        component: QuestionContainerComponent,\n      },\n      {\n        path: 'instance/:instanceId/question/:questionId',\n        component: QuestionComponent,\n      }\n    ]\n  }\n];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"root\\\">\\n  <div class=\\\"card question-container\\\">\\n    <app-question-dummy\\n      [question]=\\\"question$ | async\\\"\\n      [hasNextQuestion]=\\\"hasNextQuestion$ | async\\\"\\n      [hasPrevQuestion]=\\\"hasPrevQuestion$ | async\\\"\\n      [answer]=\\\"answer$ | async\\\"\\n      (nextQuestion)=\\\"nextQuestion($event)\\\"\\n      (prevQuestion)=\\\"prevQuestion()\\\"\\n    ></app-question-dummy>\\n  </div>\\n</div>\\n\";","import {Component, OnInit} from '@angular/core';\nimport { LocalNotifications } from '@nativescript/local-notifications';\nimport {UtilityService} from '@src/app/utility/utility.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(\n      private utilityService: UtilityService\n  ) {\n    this.utilityService.initNotifications();\n  }\n\n  ngOnInit() {\n    this.utilityService.scheduleSurveyNotifications();\n  }\n}\n","export default \"<div class=\\\"mat-typography\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\";","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {FormBuilder, FormControl} from '@angular/forms';\nimport {findNativeScriptPlatformPathInSource} from '@nativescript/webpack/utils/ast-utils';\n\n@Component({\n  selector: 'app-question-choice-slider',\n  templateUrl: './question-choice-slider.component.html',\n  styleUrls: ['question-choice-slider.component.css']\n})\nexport class QuestionChoiceSliderComponent {\n  @Output() nextQuestion = new EventEmitter();\n  @Output() prevQuestion = new EventEmitter();\n\n  @Input() label: string;\n\n  private _options;\n  @Input() set options(value: {label: string}[]) {\n    this._options = value;\n    // side effect, reset slider value\n    this.sliderControl.setValue(1);\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  private _startValue = [];\n  @Input() set startValue(value: number[]) {\n    this._startValue = value;\n\n    if (!value) {\n      return;\n    }\n\n    this.precompilateForm();\n  }\n\n  fg = this.fb.group({\n    slider: this.fb.control(1)\n  });\n\n  get sliderControl() {\n    return this.fg.get('slider') as FormControl;\n  }\n\n  get selectedOption() {\n    return this.options[this.sliderControl.value - 1]?.label;\n  }\n\n  minNumber = 1;\n  get maxNumber() {\n    return this.options?.length ?? this.minNumber;\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  onValueChange(value) {\n    this.sliderControl.setValue(value);\n  }\n\n  onNextQuestion () {\n    const output = this.formatOutput();\n    this.nextQuestion.emit(output);\n  }\n\n  onPrevQuestion () {\n    this.prevQuestion.emit();\n  }\n\n  formatOutput() {\n    const value = this.sliderControl.value;\n    return [value - 1];\n  }\n\n  precompilateForm() {\n    const [value] = this._startValue;\n    this.sliderControl.setValue(value + 1);\n  }\n}\n","export default \"<a class=\\\"instance card\\\" [routerLink]=\\\"link\\\">\\n  <p>\\n    <span class=\\\"day\\\">{{day}}</span>\\n    <span class=\\\"month\\\">{{month}}</span>\\n  </p>\\n  <p>\\n    <span class=\\\"year\\\">{{year}}</span>\\n  </p>\\n</a>\\n\";","import parse from 'date-fns/parse';\n\nexport class InstanceModel {\n  _id: string;\n  surveyId: string;\n  date: Date;\n\n  constructor({_id, surveyId, date}) {\n    this._id = _id;\n    this.surveyId = surveyId;\n    this.date = parse(date, 'dd-MM-yyyy', new Date());\n  }\n}\n","import {Component, EventEmitter, Output} from '@angular/core';\nimport {QuestionService} from '@src/app/survey/question/question.service';\n\n@Component({\n  selector: 'app-confirm-buttons',\n  templateUrl: './confirm-buttons.component.html',\n  styleUrls: ['./confirm-buttons.component.css']\n})\nexport class ConfirmButtonsComponent {\n  @Output() next = new EventEmitter();\n  @Output() prev = new EventEmitter();\n\n  get hasNextQuestion(): boolean {\n    return this.questionService.hasNextQuestion;\n  }\n\n  get hasPrevQuestion(): boolean {\n    return this.questionService.hasPrevQuestion;\n  }\n\n  constructor(\n    private questionService: QuestionService,\n  ) {}\n\n  onNext() {\n    this.next.emit();\n  }\n\n  onPrev() {\n    this.prev.emit();\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SurveyService} from '@src/app/survey/survey.service';\nimport {Observable} from 'rxjs';\nimport {InstanceModel} from '@src/app/survey/instance.model';\n\n@Component({\n  selector: 'app-instances',\n  templateUrl: './instances.component.html',\n  styleUrls: ['./instances.component.css']\n})\nexport class InstancesComponent implements OnInit {\n  instances$: Observable<InstanceModel[]>;\n\n  constructor(private surveyService: SurveyService) {}\n\n  ngOnInit() {\n    this.instances$ = this.surveyService.getInstances();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from '@src/app/app-routing.module';\nimport { AppComponent } from '@src/app/app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {declarations} from '@src/app/global/module/declarations';\nimport {providers} from '@src/app/global/module/providers';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MaterialModule} from '@src/app/material/material.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatSliderModule} from '@angular/material/slider';\n\n\n@NgModule({\n  declarations: declarations,\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    MatSliderModule,\n  ],\n  providers: providers,\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthInterceptor} from '@src/app/auth/auth.interceptor';\nimport {GlobalInterceptor} from '@src/app/global/global.interceptor';\n\nexport const providers = [\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true,\n    },\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: GlobalInterceptor,\n        multi: true,\n    }\n];\n","export default \"<div class=\\\"root\\\">\\n  <button\\n    mat-raised-button\\n    color=\\\"primary\\\"\\n    (click)=\\\"onPrev()\\\"\\n    [disabled]=\\\"!hasPrevQuestion\\\"\\n  >PREV</button>\\n  <button\\n    mat-raised-button\\n    color=\\\"primary\\\"\\n    (click)=\\\"onNext()\\\"\\n  >\\n    {{hasNextQuestion ? 'NEXT' : 'CONFIRM'}}\\n  </button>\\n</div>\\n\";","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '@src/app/auth/auth.service';\nimport {AbstractControl, FormBuilder, Validators} from '@angular/forms';\nimport {catchError, mergeMap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {of} from 'rxjs';\nimport {UtilityService} from '@src/app/utility/utility.service';\nimport {IconService} from '@src/app/utility/icon.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form = this.fb.group({\n    username: this.fb.control('', [Validators.required]),\n    password: this.fb.control('', [Validators.required])\n  });\n\n  get username() {\n    return this.form.get('username');\n  }\n\n  get password()  {\n    return this.form.get('password');\n  }\n\n  wrongLogin = false;\n  loading = false;\n\n  _passwordVisible;\n  set passwordVisible(value: boolean) {\n    this._passwordVisible = value;\n    this.iconPassword = value ? this.iconEye : this.iconEyeSlash;\n  }\n\n  get passwordVisible() {\n    return this._passwordVisible;\n  }\n\n  iconEye;\n  iconEyeSlash;\n  iconPassword;\n\n  constructor(\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private router: Router,\n    private utilityService: UtilityService,\n    public iconService: IconService,\n  ) {}\n\n  ngOnInit() {\n    this.iconEye = this.iconService.eye;\n    this.iconEyeSlash = this.iconService.eyeSlash;\n    this.passwordVisible = false;\n  }\n\n  submit() {\n    this.wrongLogin = false;\n    this.utilityService.dismissSoftKeyBoard();\n\n    if (this.form.invalid) {\n      this.username.markAsDirty();\n      this.password.markAsDirty();\n      return;\n    }\n\n    this.loading = true;\n\n    this.authService.login(this.username.value, this.password.value).pipe(\n      mergeMap(() => this.router.navigate(['/instance'])),\n      catchError(err => {\n        this.wrongLogin = true;\n        this.loading = false;\n        return of(err);\n      }),\n    ).subscribe();\n  }\n\n  errorVisible(control: AbstractControl) {\n    return control.invalid && !control.pristine;\n  }\n\n  clearForm() {\n    this.wrongLogin = false;\n    this.form.reset();\n    this.utilityService.dismissSoftKeyBoard();\n  }\n\n  togglePasswordVisibility() {\n    this.passwordVisible = !this.passwordVisible;\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  saveToken(token) {\n    localStorage.setItem('auth-token', token);\n  }\n\n  readToken() {\n    return localStorage.getItem('auth-token');\n  }\n\n  decodeToken(token) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-question-array',\n  templateUrl: './question-array.component.html',\n  styleUrls: ['./question-array.component.css', '../question.component.css']\n})\nexport class QuestionArrayComponent {\n  @Output() nextQuestion = new EventEmitter();\n  @Output() prevQuestion = new EventEmitter();\n\n  @Input() label: string;\n  @Input() minNumberOfChoices: number;\n\n  @Input() set maxNumberOfChoices(value: number) {\n\n    this._maxNumberOfChoices = value;\n    this.singleChoice = value === 1;\n  }\n\n  @Input() hasOtherOption: boolean;\n\n  private _startValue = [[]];\n  @Input() set startValue(value: number[][]) {\n    if (!value) {\n      return;\n    }\n\n    this._startValue = value;\n    this.precompilateForm();\n  }\n\n  @Input() set optionsAndSubQuestions(value: {options: {label: string}[], subQuestions: {label: string}[]}) {\n    this._optionsAndSubQuestions = value;\n\n    const {options, subQuestions} = value;\n\n    if (!options || !subQuestions) {\n      return;\n    }\n\n    // matrix of false [[false, false], [false, false]]\n    const initValues = [];\n    for (let i = 0; i < subQuestions.length; i++) {\n      const initRow = [];\n      for (let j = 0; j < options.length; j++) {\n        initRow[j] = false;\n      }\n      initValues[i] = initRow;\n    }\n\n    this.initFormGroup(initValues);\n\n    // while (this.checkBoxesControl.controls.length < subQuestions.length) {\n    //   const subQuestionControl = this.fb.array([]);\n    //   while (subQuestionControl.controls.length < options.length) {\n    //     subQuestionControl.push(\n    //       this.fb.control(false)\n    //     );\n    //   }\n    //   this.checkBoxesControl.push(subQuestionControl);\n    // }\n\n    // this._options = valud;\n    //\n    // while (this.checkBoxesControl.controls.length < value.length) {\n    //   this.checkBoxesControl.push(\n    //     this.fb.control(false)\n    //   );\n    // }\n  }\n\n  get checkBoxesControl() {\n    return this.formGroup.get('checkBoxesControl') as FormArray;\n  }\n\n  formGroup = this.fb.group({\n    checkBoxesControl: this.fb.array([])\n  });\n\n\n  get maxNumberOfChoices(): number {\n    return this._maxNumberOfChoices;\n  }\n\n  get optionsAndSubQuestions() {\n    return this._optionsAndSubQuestions;\n  }\n\n  private _optionsAndSubQuestions;\n  private _maxNumberOfChoices: number;\n  singleChoice: boolean;\n\n  get options() {\n    return this.optionsAndSubQuestions.options;\n  }\n\n  get subQuestions() {\n    return this.optionsAndSubQuestions.subQuestions;\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  submit() {\n    const values = this.checkBoxesControl.controls.map(\n      (subQuestion: FormArray) => subQuestion.controls.map(c => c.value)\n    );\n\n  }\n\n  toggleCheckbox(value: boolean, control: AbstractControl, subQuestion: AbstractControl) {\n    if (!this.singleChoice) { // multiple choice\n      control.setValue(value);\n      return;\n    }\n\n    if (!value) {\n      return;\n    }\n\n    const controls = this.getControlsFromSubQuestion(subQuestion);\n\n    controls.map(c => {\n        c.setValue(false);\n    });\n\n    control.setValue(value);\n  }\n\n  getControlsFromSubQuestion(subQuestion: AbstractControl) {\n    return (subQuestion as FormArray).controls;\n  }\n\n  onNextQuestion () {\n    const validForm = this.validateForm();\n\n    // if (!validForm) {\n    //   return;\n    // }\n\n    const output = this.formatOutput();\n\n    this.nextQuestion.emit(output);\n  }\n\n  onPrevQuestion () {\n    this.prevQuestion.emit();\n  }\n\n  getSubQuestion(index: number) {\n    return this.optionsAndSubQuestions.subQuestions[index].label;\n  }\n\n  validateForm(): boolean {\n    return this.checkBoxesControl.controls\n      .map((c: FormArray) => this.countTrueValues(c)) // count number of true values for each subquestion\n      .map(v => v >= this.minNumberOfChoices && v <= this.maxNumberOfChoices) // check if each subquestion has valid number of answers\n      .reduce((prevValid, currValid) => {\n        // if prev not valid return false\n        if (!prevValid) {\n          return false;\n        }\n        return currValid;\n      }, true);\n  }\n\n  countTrueValues(subQuestion: FormArray): number {\n    return subQuestion.value.reduce((acc, value) => value ? acc + 1 : acc, 0);\n  }\n\n  formatOutput() {\n    return this.checkBoxesControl.value\n      .map((subQuestion: boolean[]) => {\n        return subQuestion.reduce((acc, val, index) => {\n          if (val) {\n            return [\n              ...acc,\n              index,\n            ];\n          }\n          return acc;\n        }, []);\n      });\n  }\n\n  initFormGroup(value: boolean[][]) {\n    // matrix of form array\n    this.formGroup = this.fb.group({\n      checkBoxesControl: this.fb.array(\n        value.map(row => this.fb.array(row))\n      )\n    });\n\n    // while (this.checkBoxesControl.controls.length < subQuestions.length) {\n    //   const subQuestionControl = this.fb.array([]);\n    //   while (subQuestionControl.controls.length < options.length) {\n    //     subQuestionControl.push(\n    //       this.fb.control(false)\n    //     );\n    //   }\n    //   this.checkBoxesControl.push(subQuestionControl);\n    // }\n  }\n\n  precompilateForm() {\n    // from [[2, 4], [1, 3]] to [[false, true, false, true], [true, false, true, false]]\n    const nextValue: boolean[][] = this.checkBoxesControl.value;\n    this._startValue.forEach((row: number[], rowIndex) => row.forEach(truePos => nextValue[rowIndex][truePos] = true));\n\n    this.initFormGroup(nextValue);\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {MatButtonModule} from '@angular/material/button';\nimport {NgModule} from '@angular/core';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatIconModule} from '@angular/material/icon';\n\nconst MaterialComponents = [\n  BrowserModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCheckboxModule,\n  MatTableModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatProgressBarModule,\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class GlobalInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let request = req;\n\n        // if request has a body (POST, PUT, PATCH) add\n        switch (req.method) {\n            case 'POST':\n            case 'PUT':\n            case 'PATCH':\n                request = req.clone({\n                    headers: request.headers.set('Content-Type', 'application/json')\n                });\n        }\n        return next.handle(request);\n    }\n}\n","import {Component, Input} from '@angular/core';\nimport {InstanceModel} from '@src/app/survey/instance.model';\n\n@Component({\n  selector: 'app-instances-dummy',\n  templateUrl: './instances-dummy.component.html',\n  styleUrls: ['./instances-dummy.component.css']\n})\nexport class InstancesDummyComponent {\n  @Input() instances: InstanceModel[];\n\n  constructor() {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJxdWVzdGlvbi1kdW1teS5jb21wb25lbnQuY3NzIn0= */\";","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-question-choice',\n  templateUrl: './question-choice.component.html',\n  styleUrls: ['./question-choice.component.css', '../question.component.css']\n})\nexport class QuestionChoiceComponent implements OnInit {\n  @Output() nextQuestion = new EventEmitter();\n  @Output() prevQuestion = new EventEmitter();\n\n  @Input() label: string;\n  @Input() minNumberOfChoices: number;\n  @Input() hasOtherOption: boolean;\n\n  private _maxNumberOfChoices;\n  @Input() set maxNumberOfChoices(value: number) {\n\n    this._maxNumberOfChoices = value;\n    this.singleChoice = value === 1;\n  }\n\n  get maxNumberOfChoices() {\n    return this._maxNumberOfChoices;\n  }\n\n  private _startValue = [];\n  @Input() set startValue(value: number[]) {\n    this._startValue = value;\n\n    if (!value) {\n      return;\n    }\n    this.precompilateForm();\n  }\n\n  private _options;\n  @Input() set options(value: {label: string}[]) {\n    this._options = value;\n\n    // const initValues = [];\n    // for (let i = 0; i < subQuestions.length; i++) {\n    //   const initRow = [];\n    //   for (let j = 0; j < options.length; j++) {\n    //     initRow[j] = false;\n    //   }\n    //   initValues[i] = initRow;\n    // }\n\n    const initValue = [];\n    for (let i = 0; i < this._options.length; i++) {\n      initValue[i] = false;\n    }\n\n    this.initFormGroup(initValue);\n\n    // while (this.checkBoxesControl.controls.length < value.length) {\n    //   this.checkBoxesControl.push(\n    //     this.fb.control(false)\n    //   );\n    // }\n    // this.checkBoxesControl.\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get checkBoxesControl() {\n    return this.formGroup.get('checkBoxesControl') as FormArray;\n  }\n\n  formGroup = this.fb.group({\n    checkBoxesControl: this.fb.array([])\n  });\n\n  disableCheckBoxes = false;\n\n  private _numberOfTrueValues = 0;\n  set numberOfTrueValues(value) {\n    this._numberOfTrueValues = value;\n    this.disableCheckBoxes = value >= this.maxNumberOfChoices;\n  }\n\n  get numberOfTrueValues() {\n    return this._numberOfTrueValues;\n  }\n\n  errorMessage = '';\n  singleChoice = false;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.numberOfTrueValues = this.countTrueValues();\n    // this.initFormGroup();\n  }\n\n  validateForm(): boolean {\n    const numberOfTrueValues = this.countTrueValues();\n    this.errorMessage = '';\n\n    if (numberOfTrueValues < this.minNumberOfChoices) {\n      this.errorMessage =  `Insert at least ${this.minNumberOfChoices} options`;\n      return false;\n    }\n\n    if (numberOfTrueValues > this.maxNumberOfChoices) {\n      this.errorMessage = `Insert at most ${this.maxNumberOfChoices} options`;\n      return false;\n    }\n\n    return true;\n  }\n\n  toggleCheckbox(value: boolean, control: AbstractControl) {\n    if (!this.singleChoice) {\n      control.setValue(value);\n      this.numberOfTrueValues = this.countTrueValues();\n    }\n\n    if (!value) {\n      return;\n    }\n\n    const controls = this.checkBoxesControl.controls;\n\n    controls.map(c => {\n      c.setValue(false);\n    });\n\n    control.setValue(value);\n  }\n\n  onNextQuestion () {\n    const validForm = this.validateForm();\n\n    if (!validForm) {\n      return;\n    }\n\n    const output = this.formatOutput();\n    this.nextQuestion.emit(output);\n  }\n\n  onPrevQuestion () {\n    this.prevQuestion.emit();\n  }\n\n  getOptionLabelFromIndex(index: number): string {\n    return this.options[index].label;\n  }\n\n  countTrueValues() {\n    return this.checkBoxesControl.controls.reduce((acc:  number, control) => {\n      if (control.value) {\n        return acc + 1;\n      }\n      return acc;\n    }, 0);\n  }\n\n  formatOutput() {\n    return this.checkBoxesControl.controls.reduce((acc: number[], control, index) => {\n      if (control.value) {\n        return [...acc, index];\n      }\n      return acc;\n    }, []);\n  }\n\n  initFormGroup(value = []) {\n    this.formGroup = this.fb.group({\n      checkBoxesControl: this.fb.array(value)\n    });\n  }\n\n  precompilateForm() {\n    // from [2, 4, 5] to [false, true, false, true, true]\n    const nextValue = this.checkBoxesControl.controls.map(() => false);\n    this._startValue.forEach(pos => nextValue[pos] = true);\n\n    this.initFormGroup(nextValue);\n  }\n}\n","export class QuestionArrayModel {\n  label;\n  minNumberOfChoices: number;\n  maxNumberOfChoices: number;\n  subQuestion: {label: string}[];\n  options: {label: string}[];\n\n  constructor({label, minNumberOfChoices, maxNumberOfChoices, subQuestions, options}) {\n    this.label = label;\n    this.minNumberOfChoices = minNumberOfChoices;\n    this.maxNumberOfChoices = maxNumberOfChoices;\n    this.subQuestion = subQuestions;\n    this.options = options;\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IconService {\n\n  get eye() {\n    return {\n      className: 'far',\n      code: this.formatCode(0xf06e)\n    };\n  }\n\n  get eyeSlash() {\n    return {\n      className: 'far',\n      code: this.formatCode(0xf070)\n    };\n  }\n\n  constructor() {}\n\n  formatCode(code: number) {\n    return String.fromCharCode(code);\n  }\n}\n","export default \"<div class=\\\"root\\\">\\n  <div class=\\\"card\\\">\\n    <h2>Vuoi rispondere al questionario giornaliero?</h2>\\n    <button\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      [disabled]=\\\"!instanceId\\\"\\n      (click)=\\\"navigateToQuestion()\\\"\\n    >Rispondi</button>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {tap} from 'rxjs/operators';\nimport {TokenStorageService} from '@src/app/auth/token-storage.service';\nimport isAfter from 'date-fns/isAfter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  prefix = 'API/auth';\n\n  constructor(\n    private http: HttpClient,\n    private tokenStorageService: TokenStorageService\n) { }\n\n  login(userId, password) {\n    return this.http.post(\n      `${this.prefix}/login`,\n      {userId, password}\n    ).pipe(\n      tap((res: any) => this.tokenStorageService.saveToken(res.token)),\n      // tap((res: any) => console.log(this.decodeToken(res.token)))\n    );\n  }\n\n  get() {\n    this.http.get(\n      `${this.prefix}/get`\n    ).subscribe(() => console.log('success'), error => console.log('fail', error));\n  }\n\n  readToken() {\n    return this.tokenStorageService.readToken();\n  }\n\n  validToken() {\n    const tokenJSON = this.tokenStorageService.readToken();\n    if (!tokenJSON) {\n      return false;\n    }\n\n    const token = this.tokenStorageService.decodeToken(tokenJSON);\n    const expireDate = new Date(token.exp * 1000);\n    const now = new Date();\n    return isAfter(expireDate, now);\n  }\n}\n","export default \"<app-question-choice\\n  *ngIf=\\\"isTypeChoice && !questionData.slider\\\"\\n  [label]=\\\"questionLabel\\\"\\n  [minNumberOfChoices]=\\\"questionData.minNumberOfChoices\\\"\\n  [maxNumberOfChoices]=\\\"questionData.maxNumberOfChoices\\\"\\n  [hasOtherOption]=\\\"questionData.hasOtherOption\\\"\\n  [options]=\\\"questionData.options\\\"\\n  [startValue]=\\\"startValue\\\"\\n  (nextQuestion)=\\\"onNextQuestion($event)\\\"\\n  (prevQuestion)=\\\"onPrevQuestion()\\\"\\n>\\n</app-question-choice>\\n<app-question-choice-slider\\n  *ngIf=\\\"isTypeChoice && questionData.slider\\\"\\n  [label]=\\\"questionLabel\\\"\\n  [options]=\\\"questionData.options\\\"\\n  [startValue]=\\\"startValue\\\"\\n  (nextQuestion)=\\\"onNextQuestion($event)\\\"\\n  (prevQuestion)=\\\"onPrevQuestion()\\\"\\n>\\n</app-question-choice-slider>\\n<app-question-array\\n  *ngIf=\\\"isTypeArray\\\"\\n  [label]=\\\"questionLabel\\\"\\n  [minNumberOfChoices]=\\\"questionData.minNumberOfChoices\\\"\\n  [maxNumberOfChoices]=\\\"questionData.maxNumberOfChoices\\\"\\n  [optionsAndSubQuestions]=\\\"{subQuestions: questionData.subQuestion, options: questionData.options}\\\"\\n  [startValue]=\\\"startValue\\\"\\n  (nextQuestion)=\\\"onNextQuestion($event)\\\"\\n  (prevQuestion)=\\\"onPrevQuestion()\\\"\\n></app-question-array>\\n<app-question-input\\n  *ngIf=\\\"isTypeInput\\\"\\n  [label]=\\\"questionData.label\\\"\\n  [textConfigValues]=\\\"{\\n              type: questionData.type,\\n              minLength: questionData.minLength,\\n              maxLength: questionData.maxLength\\n            }\\\"\\n  [startValue]=\\\"startValue\\\"\\n  (nextQuestion)=\\\"onNextQuestion($event)\\\"\\n  (prevQuestion)=\\\"onPrevQuestion()\\\"\\n></app-question-input>\\n\";","export default \".instance {\\n  padding: 25px 25px 20px;\\n  text-decoration: none;\\n  display: block;\\n  color: #000;\\n}\\n\\np {\\n  margin: 0;\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n\\n.day {\\n  font-size: 30px;\\n  margin-right: 20px;\\n}\\n\\n.month {\\n  font-size: 28px;\\n}\\n\\n.year {\\n  font-size: 18px;\\n  margin-top: 20px\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc3RhbmNlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBdUI7RUFDdkIscUJBQXFCO0VBQ3JCLGNBQWM7RUFDZCxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxTQUFTO0VBQ1QsYUFBYTtFQUNiLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtFQUNmO0FBQ0YiLCJmaWxlIjoiaW5zdGFuY2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnN0YW5jZSB7XG4gIHBhZGRpbmc6IDI1cHggMjVweCAyMHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogIzAwMDtcbn1cblxucCB7XG4gIG1hcmdpbjogMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmRheSB7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuXG4ubW9udGgge1xuICBmb250LXNpemU6IDI4cHg7XG59XG5cbi55ZWFyIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBtYXJnaW4tdG9wOiAyMHB4XG59XG4iXX0= */\";","export default \"<app-instances-dummy\\n  [instances]=\\\"instances$ | async\\\"\\n></app-instances-dummy>\\n\";","export default \".root {\\n  background-color: #f8f8f8;\\n  height: 100vh;\\n  width: 100vw;\\n\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.card {\\n  min-width: 300px;\\n  padding: 30px 40px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZGF5LWluc3RhbmNlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7RUFDekIsYUFBYTtFQUNiLFlBQVk7O0VBRVosYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InRvZGF5LWluc3RhbmNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm9vdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDB2dztcblxuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmNhcmQge1xuICBtaW4td2lkdGg6IDMwMHB4O1xuICBwYWRkaW5nOiAzMHB4IDQwcHg7XG59XG4iXX0= */\";","export class QuestionChoiceModel {\n  label: string;\n  minNumberOfChoices: number;\n  maxNumberOfChoices: number;\n  hasOtherOption: boolean;\n  options: {label: string}[];\n  slider: boolean;\n\n  constructor(data: {\n    label: string,\n    minNumberOfChoices: number;\n    maxNumberOfChoices: number;\n    hasOtherOption: boolean;\n    slider: boolean;\n    options: {label: string}[];\n  }) {\n    this.label = data.label;\n    this.minNumberOfChoices = data.minNumberOfChoices;\n    this.maxNumberOfChoices = data.maxNumberOfChoices;\n    this.hasOtherOption = data.hasOtherOption;\n    this.options = data.options;\n    this.slider = !!data.slider;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '@src/app/auth/auth.service';\n\n@Injectable({\n    providedIn: 'root'\n}) export class LoginGuard implements CanActivate {\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        const isValidToken = this.authService.validToken();\n        if (!isValidToken) {\n            return true;\n        }\n\n        return this.router.parseUrl('/');\n    }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {SurveyService} from '@src/app/survey/survey.service';\nimport {Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\nimport { tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-today-instance',\n  templateUrl: './today-instance.component.html',\n  styleUrls: ['./today-instance.component.css']\n}) export class TodayInstanceComponent implements OnInit, OnDestroy {\n  todayInstanceSubscription: Subscription;\n  instanceId;\n\n  constructor(private surveyService: SurveyService, private router: Router) {}\n\n  ngOnInit() {\n    this.todayInstanceSubscription = this.surveyService.getTodayInstance().pipe(\n      tap(instance => this.instanceId = instance._id),\n      // switchMap(instance => this.router.navigate(['instance', instance._id]))\n    ).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.todayInstanceSubscription?.unsubscribe();\n  }\n\n  navigateToQuestion() {\n    if (!this.instanceId) {\n      return;\n    }\n    this.router.navigate(['instance', this.instanceId]).catch();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { routes } from '@src/app/app.routes';\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".container {\\n  height: 100vh;\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.card {\\n  width: 500px;\\n  padding: 40px 50px 0;\\n}\\n\\nform {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.form-field {\\n  margin-bottom: 10px;\\n}\\n\\n.buttons {\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.buttons button {\\n  width: 45%;\\n}\\n\\n.wrong-login-message {\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n}\\n\\n.wrong-login-message,\\nmat-progress-bar {\\n  opacity: 0;\\n  transition: opacity 300ms;\\n}\\n\\n.visible {\\n  opacity: 1;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsV0FBVztFQUNYLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7O0FBRUE7O0VBRUUsVUFBVTtFQUNWLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFVBQVU7QUFDWiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmNhcmQge1xuICB3aWR0aDogNTAwcHg7XG4gIHBhZGRpbmc6IDQwcHggNTBweCAwO1xufVxuXG5mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmZvcm0tZmllbGQge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uYnV0dG9ucyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5idXR0b25zIGJ1dHRvbiB7XG4gIHdpZHRoOiA0NSU7XG59XG5cbi53cm9uZy1sb2dpbi1tZXNzYWdlIHtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG5cbi53cm9uZy1sb2dpbi1tZXNzYWdlLFxubWF0LXByb2dyZXNzLWJhciB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMzAwbXM7XG59XG5cbi52aXNpYmxlIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJxdWVzdGlvbi1pbnB1dC5jb21wb25lbnQuY3NzIn0= */\";","export default \"table {\\n  margin-top: 24px;\\n  margin-bottom: 50px;\\n  border-spacing: 0;\\n}\\n\\nth, td {\\n  padding: 20px 10px;\\n}\\n\\nth {\\n  color: #777;\\n  font-weight: normal;\\n}\\n\\ntd {\\n  border-top: 1px solid #ccc;\\n}\\n\\n.checkbox-container {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9uLWFycmF5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSwwQkFBMEI7QUFDNUI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCIiwiZmlsZSI6InF1ZXN0aW9uLWFycmF5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIG1hcmdpbi10b3A6IDI0cHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50aCwgdGQge1xuICBwYWRkaW5nOiAyMHB4IDEwcHg7XG59XG5cbnRoIHtcbiAgY29sb3I6ICM3Nzc7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbnRkIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG59XG5cbi5jaGVja2JveC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnN0YW5jZXMuY29tcG9uZW50LmNzcyJ9 */\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from '@src/app/app.module';\nimport { environment } from '@src/environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <form [formGroup]=\\\"form\\\">\\n      <!-- username -->\\n      <mat-form-field class=\\\"form-field\\\" appearance=\\\"outline\\\">\\n        <mat-label>Username</mat-label>\\n        <input formControlName=\\\"username\\\" matInput placeholder=\\\"Insert username\\\">\\n        <mat-error>Insert a username</mat-error>\\n      </mat-form-field>\\n\\n      <!-- password -->\\n      <mat-form-field class=\\\"form-field\\\" appearance=\\\"outline\\\">\\n        <mat-label>Password</mat-label>\\n        <input [type]=\\\"passwordVisible ? 'text' : 'password'\\\" formControlName=\\\"password\\\" matInput placeholder=\\\"Insert password\\\">\\n        <mat-error>Insert a password</mat-error>\\n        <button matSuffix mat-icon-button (click)=\\\"togglePasswordVisibility()\\\">\\n          <mat-icon *ngIf=\\\"passwordVisible\\\">visibility</mat-icon>\\n          <mat-icon *ngIf=\\\"!passwordVisible\\\">visibility_off</mat-icon>\\n        </button>\\n      </mat-form-field>\\n\\n      <!-- buttons -->\\n      <div class=\\\"buttons\\\">\\n        <button (click)=\\\"submit()\\\" mat-button color=\\\"primary\\\" [disabled]=\\\"loading\\\">LOGIN</button>\\n        <button (click)=\\\"clearForm()\\\" mat-button [disabled]=\\\"loading\\\">CANCEL</button>\\n      </div>\\n    </form>\\n    <span\\n      [ngClass]=\\\"{'mat-error': true, 'wrong-login-message': true, 'visible': wrongLogin}\\\"\\n    >\\n      Wrong Username or Password\\n    </span>\\n    <mat-progress-bar [ngClass]=\\\"{'visible': loading}\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n  </div>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}